\ Model scheduling_copy
\ LP format - for model browsing. Use MPS format to capture full model detail.
Minimize
 
Subject To
 R26: core_assignments[Core_5,7000] <= 0
 R65: core_assignments[Core_5,7000] - assignments[Core_5,0,7000]
   - assignments[Core_5,1,7000] - assignments[Core_5,2,7000] = 0
 R89: - node_assignments[1,7000] - 2 node_assignments[2,7000]
   + slot_per_id[7000] = 0
 R91: - slot_per_id[5000] + slot_per_id[7000] >= 1
 R92: weights_per_core[Core_0] <= 1.6777216e+07
 R93: weights_per_core[Core_1] <= 1.6777216e+07
 R94: weights_per_core[Core_2] <= 1.6777216e+07
 R95: weights_per_core[Core_3] <= 1.6777216e+07
 R96: weights_per_core[Core_4] <= 1.048576e+06
 qc0: [ - k_splits[7000] * node_assignments[1,7000]
   + node_assignments[1,7000] * assignments[Core_0,1,7000]
   + node_assignments[1,7000] * assignments[Core_1,1,7000]
   + node_assignments[1,7000] * assignments[Core_2,1,7000]
   + node_assignments[1,7000] * assignments[Core_3,1,7000]
   + node_assignments[1,7000] * assignments[Core_4,1,7000]
   + node_assignments[1,7000] * assignments[Core_5,1,7000] ] = 0
 qc1: [ - k_splits[7000] * node_assignments[2,7000]
   + node_assignments[2,7000] * assignments[Core_0,2,7000]
   + node_assignments[2,7000] * assignments[Core_1,2,7000]
   + node_assignments[2,7000] * assignments[Core_2,2,7000]
   + node_assignments[2,7000] * assignments[Core_3,2,7000]
   + node_assignments[2,7000] * assignments[Core_4,2,7000]
   + node_assignments[2,7000] * assignments[Core_5,2,7000] ] = 0
 qc2: [ k_splits[7000] * weights_per_split[7000] ] >= 2.12992e+08
 qc3: weights_per_core[Core_0] + [
   - assignments[Core_0,0,2000] * weights_per_split[2000]
   - assignments[Core_0,0,5000] * weights_per_split[5000]
   - assignments[Core_0,0,7000] * weights_per_split[7000]
   - assignments[Core_0,1,2000] * weights_per_split[2000]
   - assignments[Core_0,1,5000] * weights_per_split[5000]
   - assignments[Core_0,1,7000] * weights_per_split[7000]
   - assignments[Core_0,2,2000] * weights_per_split[2000]
   - assignments[Core_0,2,5000] * weights_per_split[5000]
   - assignments[Core_0,2,7000] * weights_per_split[7000] ] >= 0
 qc4: weights_per_core[Core_1] + [
   - assignments[Core_1,0,2000] * weights_per_split[2000]
   - assignments[Core_1,0,5000] * weights_per_split[5000]
   - assignments[Core_1,0,7000] * weights_per_split[7000]
   - assignments[Core_1,1,2000] * weights_per_split[2000]
   - assignments[Core_1,1,5000] * weights_per_split[5000]
   - assignments[Core_1,1,7000] * weights_per_split[7000]
   - assignments[Core_1,2,2000] * weights_per_split[2000]
   - assignments[Core_1,2,5000] * weights_per_split[5000]
   - assignments[Core_1,2,7000] * weights_per_split[7000] ] >= 0
 qc5: weights_per_core[Core_2] + [
   - assignments[Core_2,0,2000] * weights_per_split[2000]
   - assignments[Core_2,0,5000] * weights_per_split[5000]
   - assignments[Core_2,0,7000] * weights_per_split[7000]
   - assignments[Core_2,1,2000] * weights_per_split[2000]
   - assignments[Core_2,1,5000] * weights_per_split[5000]
   - assignments[Core_2,1,7000] * weights_per_split[7000]
   - assignments[Core_2,2,2000] * weights_per_split[2000]
   - assignments[Core_2,2,5000] * weights_per_split[5000]
   - assignments[Core_2,2,7000] * weights_per_split[7000] ] >= 0
 qc6: weights_per_core[Core_3] + [
   - assignments[Core_3,0,2000] * weights_per_split[2000]
   - assignments[Core_3,0,5000] * weights_per_split[5000]
   - assignments[Core_3,0,7000] * weights_per_split[7000]
   - assignments[Core_3,1,2000] * weights_per_split[2000]
   - assignments[Core_3,1,5000] * weights_per_split[5000]
   - assignments[Core_3,1,7000] * weights_per_split[7000]
   - assignments[Core_3,2,2000] * weights_per_split[2000]
   - assignments[Core_3,2,5000] * weights_per_split[5000]
   - assignments[Core_3,2,7000] * weights_per_split[7000] ] >= 0
 qc7: weights_per_core[Core_4] + [
   - assignments[Core_4,0,2000] * weights_per_split[2000]
   - assignments[Core_4,0,5000] * weights_per_split[5000]
   - assignments[Core_4,0,7000] * weights_per_split[7000]
   - assignments[Core_4,1,2000] * weights_per_split[2000]
   - assignments[Core_4,1,5000] * weights_per_split[5000]
   - assignments[Core_4,1,7000] * weights_per_split[7000]
   - assignments[Core_4,2,2000] * weights_per_split[2000]
   - assignments[Core_4,2,5000] * weights_per_split[5000]
   - assignments[Core_4,2,7000] * weights_per_split[7000] ] >= 0
Bounds
 k_splits[7000] free
 slot_per_id[7000] free
 weights_per_split[7000] free
 weights_per_core[Core_0] free
 weights_per_core[Core_1] free
 weights_per_core[Core_2] free
 weights_per_core[Core_3] free
 weights_per_core[Core_4] free
Binaries
 core_assignments[Core_5,7000] node_assignments[1,7000]
 node_assignments[2,7000] assignments[Core_0,0,2000]
 assignments[Core_0,0,5000] assignments[Core_0,0,7000]
 assignments[Core_0,1,2000] assignments[Core_0,1,5000]
 assignments[Core_0,1,7000] assignments[Core_0,2,2000]
 assignments[Core_0,2,5000] assignments[Core_0,2,7000]
 assignments[Core_1,0,2000] assignments[Core_1,0,5000]
 assignments[Core_1,0,7000] assignments[Core_1,1,2000]
 assignments[Core_1,1,5000] assignments[Core_1,1,7000]
 assignments[Core_1,2,2000] assignments[Core_1,2,5000]
 assignments[Core_1,2,7000] assignments[Core_2,0,2000]
 assignments[Core_2,0,5000] assignments[Core_2,0,7000]
 assignments[Core_2,1,2000] assignments[Core_2,1,5000]
 assignments[Core_2,1,7000] assignments[Core_2,2,2000]
 assignments[Core_2,2,5000] assignments[Core_2,2,7000]
 assignments[Core_3,0,2000] assignments[Core_3,0,5000]
 assignments[Core_3,0,7000] assignments[Core_3,1,2000]
 assignments[Core_3,1,5000] assignments[Core_3,1,7000]
 assignments[Core_3,2,2000] assignments[Core_3,2,5000]
 assignments[Core_3,2,7000] assignments[Core_4,0,2000]
 assignments[Core_4,0,5000] assignments[Core_4,0,7000]
 assignments[Core_4,1,2000] assignments[Core_4,1,5000]
 assignments[Core_4,1,7000] assignments[Core_4,2,2000]
 assignments[Core_4,2,5000] assignments[Core_4,2,7000]
 assignments[Core_5,0,7000] assignments[Core_5,1,7000]
 assignments[Core_5,2,7000]
Generals
 k_splits[7000] slot_per_id[5000] slot_per_id[7000] weights_per_split[2000]
 weights_per_split[5000] weights_per_split[7000] weights_per_core[Core_0]
 weights_per_core[Core_1] weights_per_core[Core_2] weights_per_core[Core_3]
 weights_per_core[Core_4]
End
